// src/components/CharacterCreation/CharacterCreation.module.scss
@import "../../styles/variables";
@import "../../styles/mixins";

.characterCreation {
  min-height: 100vh;
  @include gradient-bg("primary");
  display: flex;
  align-items: center;
  justify-content: center;
  @include spacing("padding", "lg");
  position: relative;

  // Background floating elements
  &::before {
    content: "üíª üöÄ ‚ö° üéÆ üîß üìö";
    position: fixed;
    top: 10%;
    left: 5%;
    font-size: 3rem;
    opacity: 0.05;
    z-index: -1;
    animation: float 12s ease-in-out infinite;
  }

  &::after {
    content: "üë®‚Äçüíª üë©‚Äçüíª üéØ üí° üìä üèÜ";
    position: fixed;
    bottom: 10%;
    right: 5%;
    font-size: 2.5rem;
    opacity: 0.05;
    z-index: -1;
    animation: float 15s ease-in-out infinite reverse;
  }
}

.container {
  max-width: 900px;
  width: 100%;
  animation: bounceIn 0.8s ease-out;
}

.header {
  text-align: center;
  @include spacing("margin-bottom", "xxl");

  .subtitle {
    @include font-size("section-header");
    @include font-weight("medium");
    color: rgba(255, 255, 255, 0.9);
    @include spacing("margin-top", "md");
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
  }
}

.content {
  display: grid;
  gap: map-get($spacing, "xl");
  @include spacing("margin-bottom", "xxl");

  @media (min-width: map-get($breakpoints, "tablet")) {
    grid-template-columns: 1fr 1fr;
  }
}

.avatarCard {
  @include gradient-bg("character-stats");
  color: white;
  border-color: rgba(255, 255, 255, 0.3);
}

.detailsCard {
  display: flex;
  flex-direction: column;
  gap: map-get($spacing, "lg");
}

.cardTitle {
  @include font-size("card-title");
  @include font-weight("bold");
  text-align: center;
  @include spacing("margin-bottom", "lg");
  display: flex;
  align-items: center;
  justify-content: center;
  gap: map-get($spacing, "sm");
}

.avatarSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: map-get($spacing, "xl");
}

.avatarContainer {
  display: flex;
  justify-content: center;
  @include spacing("padding", "lg");
  background: rgba(255, 255, 255, 0.1);
  @include border-radius("large");
  animation: pulse 3s infinite;
}

.avatarControls {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: map-get($spacing, "lg");
}

.genderSelection {
  text-align: center;
}

.controlTitle {
  @include font-size("body");
  @include font-weight("semibold");
  @include spacing("margin-bottom", "md");
  opacity: 0.9;
}

.genderButtons {
  display: flex;
  gap: map-get($spacing, "md");
  justify-content: center;
}

.randomizeSection {
  text-align: center;
}

.nameSection {
  display: flex;
  flex-direction: column;
  gap: map-get($spacing, "sm");
}

.inputLabel {
  @include font-size("body");
  @include font-weight("semibold");
  @include color("primary-text");
}

.nameInput {
  @include spacing("padding", "md");
  @include border-radius("medium");
  border: 2px solid rgba(102, 126, 234, 0.3);
  background: rgba(255, 255, 255, 0.95);
  @include font-size("body");
  @include font-weight("medium");
  font-family: $font-family-primary;
  transition: all map-get($transitions, "normal") ease;

  &:focus {
    outline: none;
    border-color: map-get($colors, "accent-blue");
    @include shadow("button");
    transform: translateY(-2px);
  }

  &::placeholder {
    color: rgba(74, 85, 104, 0.5);
  }
}

.startingStats {
  @include spacing("padding", "lg");
  background: rgba(102, 126, 234, 0.1);
  @include border-radius("medium");
}

.statsGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: map-get($spacing, "md");

  @media (max-width: map-get($breakpoints, "mobile")) {
    grid-template-columns: 1fr;
  }
}

.statItem {
  display: flex;
  align-items: center;
  gap: map-get($spacing, "sm");
  @include spacing("padding", "sm");
  background: rgba(255, 255, 255, 0.1);
  @include border-radius("small");
}

.statEmoji {
  @include font-size("card-title");
}

.statLabel {
  @include font-size("secondary");
  @include font-weight("medium");
  @include color("secondary-text");
  flex: 1;
}

.statValue {
  @include font-size("body");
  @include font-weight("semibold");
  @include color("accent-blue");
}

.startingSkills {
  @include spacing("padding", "lg");
  background: rgba(132, 250, 176, 0.1);
  @include border-radius("medium");
  text-align: center;
}

.skillsList {
  display: flex;
  gap: map-get($spacing, "sm");
  justify-content: center;
  @include spacing("margin-bottom", "md");
  flex-wrap: wrap;
}

.skillBadge {
  @include spacing("padding", "sm");
  @include spacing("padding-left", "md");
  @include spacing("padding-right", "md");
  background: rgba(79, 172, 254, 0.2);
  @include border-radius("medium");
  @include font-size("secondary");
  @include font-weight("semibold");
  @include color("accent-blue");
  border: 1px solid rgba(79, 172, 254, 0.3);
}

.skillsNote {
  @include font-size("small");
  @include color("secondary-text");
  font-style: italic;
}

.footer {
  text-align: center;
  animation: fadeIn 1s ease-out 0.5s both;
}

// Responsive adjustments
@media (max-width: map-get($breakpoints, "tablet")) {
  .content {
    grid-template-columns: 1fr;
  }

  .avatarSection {
    gap: map-get($spacing, "lg");
  }

  .avatarContainer {
    @include spacing("padding", "md");
  }

  .genderButtons {
    flex-direction: column;
    gap: map-get($spacing, "sm");
  }
}

@media (max-width: map-get($breakpoints, "mobile")) {
  .characterCreation {
    @include spacing("padding", "md");
  }

  .container {
    max-width: 100%;
  }

  .header {
    @include spacing("margin-bottom", "lg");

    .text-game-title {
      @include font-size("section-header");
    }

    .subtitle {
      @include font-size("body");
    }
  }

  .content {
    gap: map-get($spacing, "lg");
  }

  .cardTitle {
    @include font-size("body");
  }

  .avatarContainer {
    svg {
      width: 120px !important;
      height: 120px !important;
    }
  }
}

// Loading and hover states
.nameInput:hover {
  border-color: rgba(102, 126, 234, 0.5);
}

.statItem:hover {
  background: rgba(255, 255, 255, 0.15);
  transform: translateY(-1px);
}

.skillBadge:hover {
  background: rgba(79, 172, 254, 0.3);
  transform: translateY(-1px);
}

// Focus states for accessibility
.nameInput:focus,
.genderButtons button:focus {
  outline: 2px solid map-get($colors, "accent-blue");
  outline-offset: 2px;
}

// Reduced motion preferences
@media (prefers-reduced-motion: reduce) {
  .characterCreation {
    &::before,
    &::after {
      animation: none;
    }
  }

  .container {
    animation: none;
  }

  .avatarContainer {
    animation: none;
  }

  .footer {
    animation: none;
  }
}
